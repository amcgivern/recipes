generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Recipe {
    id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt         DateTime            @default(now())
    updatedAt         DateTime?           @updatedAt
    title             String?             @db.VarChar(50)
    description       String              @db.Text
    authorId          String              @db.Uuid
    Author            Author              @relation(fields: [authorId], references: [id])
    prepHours         Int
    prepMinutes       Int
    cookHours         Int
    cookMinutes       Int
    RecipeIngredient  RecipeIngredient[]
    RecipeInstruction RecipeInstruction[]
}

model RecipeInstruction {
    id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt   DateTime  @default(now())
    updatedAt   DateTime? @updatedAt
    recipeId    String    @db.Uuid
    Recipe      Recipe    @relation(fields: [recipeId], references: [id])
    description String    @db.Text()
    title       String    @db.VarChar(50)
}

model Author {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt  DateTime  @default(now())
    updatedAt  DateTime? @updatedAt
    firstName  String    @db.VarChar(50)
    lastName   String    @db.VarChar(50)
    websiteUrl String    @db.VarChar()
    rating     Int
    imageUrl   String    @db.VarChar()
    Recipe     Recipe[]
}

model RecipeIngredient {
    id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
    recipeId  String    @db.Uuid
    Recipe    Recipe    @relation(fields: [recipeId], references: [id])
    quantity  Decimal
    unitId    String    @db.Uuid
    Unit      Unit      @relation(fields: [unitId], references: [id])
}

model Ingredient {
    id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
    name      String    @db.VarChar(50)
    imageUrl  String    @db.VarChar()
    // TODO purchaseUnit ?

}

model RecipeRating {
    id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
    rating    Int
    // TODO userId
}

model Unit {
    id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt        DateTime           @default(now())
    updatedAt        DateTime?          @updatedAt
    name             String             @db.VarChar(50)
    conversion       Int // TODO Not sure about this one
    RecipeIngredient RecipeIngredient[]
}
